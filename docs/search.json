{
  "articles": [
    {
      "path": "classifier_bert.html",
      "title": "BERT 기반 민원 예측",
      "description": "텍스트 분석의 실마리를 찾기 위해서 상담 내역 텍스트 데이터를 탐색합니다. 여기에는 데이터의 품질을 보정하기 위한 관점도 포함되어 있습니다.\n",
      "author": [
        {
          "name": "유충현",
          "url": "https://choonghyunryu.github.io/"
        },
        {
          "name": "홍길동",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\n\n\n",
      "last_modified": "2022-09-25T04:22:09+00:00"
    },
    {
      "path": "classifier_lasso.html",
      "title": "LASSO 모형기반 민원 예측",
      "description": "텍스트 분석의 실마리를 찾기 위해서 상담 내역 텍스트 데이터를 탐색합니다. 여기에는 데이터의 품질을 보정하기 위한 관점도 포함되어 있습니다.\n",
      "author": [
        {
          "name": "유충현",
          "url": "https://choonghyunryu.github.io/"
        },
        {
          "name": "홍길동",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\n\n\n",
      "last_modified": "2022-09-25T04:22:10+00:00"
    },
    {
      "path": "create_website.html",
      "title": "샘플 웹 사이트 개발하기",
      "description": "텍스트 분석의 실마리를 찾기 위해서 텍스트 데이터를 탐색합니다. 여기에는 데이터의 품질을 보정하기 위한 관점도 포함되어 있습니다.\n",
      "author": [
        {
          "name": "유충현",
          "url": "https://choonghyunryu.github.io/"
        },
        {
          "name": "홍길동",
          "url": {}
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\n설정사항\n수정해야할 사항\n웹 사이트 구성 파일\n개별 페이지 구성 정보\n\nData: USArrests\n표(tables) 출력\n플롯(plots) 출력\n\n\n\n\n\n\n들어가기\n이 웹 사이트는 예제를 위해서 만든 간단한 사이트입니다.\n\n여러분은 이 Skelton 사이트에 살을 붙여서 자신의 웹 사이트를 만들 수 있습니다. 그리고 이 작업은 사이트의 구조를 이해하는 것으로부터 시작됩니다.\n\n\n\n설정사항\n수정해야할 사항\n본 템플리트는 웹 사이트 중의 한 페이지로 bitReport website라는 이름의 예제입니다. 환경 설정파일인 _site.yml에 “샘플 웹 사이트”이라는 제목으로 연결되어 있습니다. 만약에 예제 템플리트를 완성하려면 이 페이지의 이름을 _site.yml에서의 create_website과 동일하게 설정해야 합니다.\n웹 사이트 구성 파일\n웹 사이트를 구성하는 설정은 구성파일인 **_site.yml**에 정의합니다.\n_site.yml 파일에서의 사용자가 설정해야할 항목은 다음과 같습니다.\nname: 웹 사이트의 이름\n헤더의 네비게이션 바의 왼쪽에 링크표시됩니다.\n\ntitle: 웹 사이트의 타이틀\n헤더의 네비게이션 바의 왼쪽에 링크표시됩니다.\n\ndescription: 웹 사이트의 설명\noutput_dir: 생성될 웹 사이트의 정적 HTML이 저장될 디렉토리\n“docs”로 기본설정됩니다. 이 디렉토리는 github page로 deploy할 때 유용합니다.\n\nnavbar: 웹 사이트의 메뉴를 정의하는 섹션입니다.\n수정하지 않습니다.\n\nright: 웹 사이트의 메뉴를 정의합니다.\ntext는 메뉴 이름입니다.\nhref는 메뉴와 연결할 웹 페이지입니다. 확장자는 html입니다.\nR markdown 파일과 동일하게 이름을 부여합니다.\n\nmenu는 서브메뉴를 정의합니다.\n빈 분리자를 만들기 위해서는 “- text:”—“를 사용합니다.\n\noutput: 웹 사이트 출력에 대한 설정입니다. 사용자가 수정하지 않습니다.\n개별 페이지 구성 정보\n개별 페이지를 구성하기 위해서는 knitr YAML을 수정해야 합니다.\ntitle: 웹 페이지 제목입니다.\ndescription: 웹 페이지를 간단하게 소개하는 소개문입니다.\nauthor: 웹 페이지 컨텐츠 저작자 정보를 기술합니다.\nname: 저작자 이름\nurl: 저작자 개인 홈페이지 URL\naffiliation: 저작자 소속 회사/부서\naffiliation_url: 저작자 소속 회사/부서 홈페이지 URL\n\ndate: 컨텐츠를 생성한 날짜\noutput: 웹 사이트 출력에 대한 설정입니다.\ntoc: 목차를 출력할 지의 여부를 정의합니다. true이면 출력합니다.\ntoc_depth: 출력할 목차의 depth를 정의합니다. 3이면 3 depth까지 표시합니다.\n\n\n이 예제 웹 사이트는 하나의 완성된 페이지를 만드는 것이 아닌, 가상의 site를 담은 Skelton만 제공합니다. 그러므로 개별 페이지의 내용에 신경쓸 필요가 없습니다.\n\nData: USArrests\nUSArrests는 미국 주별 강력 범죄율을 기록한 데이터입니다.\n이 데이터셋은 4개의 변수와 50개의 관측치로 구성된 데이터 프레임(data.frame) 객체입니다.:\nMurder\nnumeric. 살인범 검거 건수(100,000건당)\n\nAssault\nnumeric. 폭행범 검거 건수(100,000건당)\n\nUrbanPop\nnumeric. 도시 인구 비율(백분율)\n\nRape\nnumeric. 강간범 검거 건수(100,000건당)\n\n\n\n# code here\n\n\n표(tables) 출력\n미국 주별 강력 범죄율을 기록한 데이터인 USArrests를 표로 출력합니다.\n\n\nUSArrests %>%\n    tibble::rownames_to_column(\"주 (State)\") %>%\n    arrange(desc(Murder + Assault + Rape)) %>%\n    filter(row_number() <= 10) %>%\n    select(1:3, 5, 4) %>%\n    rename(살인범 = Murder) %>%\n    rename(폭행범 = Assault) %>%\n    rename(강간범 = Rape) %>%\n    rename(`도시인구수(백분율)` = UrbanPop) %>%\n    kableExtra::kbl(caption = \"미국 범죄 상위 10개 주 현황\",\n        format.args = list(big.mark = \",\", digits = 1, scientific = 6)) %>%\n    kableExtra::kable_styling(bootstrap_options = c(\"striped\", \"hover\")) %>%\n    kableExtra::add_header_above(c(` ` = 1, `범죄자수 (인구 만명 당)` = 3,\n        ` ` = 1)) %>%\n    kableExtra::kable_classic(full_width = TRUE)\n\n\nTable 1: 미국 범죄 상위 10개 주 현황\n\n\n\n\n\n범죄자수 (인구 만명 당)\n\n\n\n\n\n주 (State)\n\n\n살인범\n\n\n폭행범\n\n\n강간범\n\n\n도시인구수(백분율)\n\n\nFlorida\n\n\n15\n\n\n335\n\n\n32\n\n\n80\n\n\nNorth Carolina\n\n\n13\n\n\n337\n\n\n16\n\n\n45\n\n\nMaryland\n\n\n11\n\n\n300\n\n\n28\n\n\n67\n\n\nArizona\n\n\n8\n\n\n294\n\n\n31\n\n\n80\n\n\nNew Mexico\n\n\n11\n\n\n285\n\n\n32\n\n\n70\n\n\nCalifornia\n\n\n9\n\n\n276\n\n\n41\n\n\n91\n\n\nAlaska\n\n\n10\n\n\n263\n\n\n44\n\n\n48\n\n\nSouth Carolina\n\n\n14\n\n\n279\n\n\n22\n\n\n48\n\n\nNevada\n\n\n12\n\n\n252\n\n\n46\n\n\n81\n\n\nMichigan\n\n\n12\n\n\n255\n\n\n35\n\n\n74\n\n\n플롯(plots) 출력\n이 예제는 가상의 설명을 포함하고 있는, 그저 템플리트를 위한 예제입니다.\n온도에 따른 수은의 증기압을 기록한 데이터인 pressure 데이터 프레임을 산점도록 시각화합니다.\n\n\nplot(pressure, pch = 16, main = \"Relation between temperature and pressure\")\nlines(loess(pressure ~ temperature, pressure), col = \"steelblue\")\n\n\n\nFigure 1: 플롯 예제\n\n\n\n\n\n\n",
      "last_modified": "2022-09-25T04:22:12+00:00"
    },
    {
      "path": "index.html",
      "title": "텍스트 데이터 분석",
      "description": "상담센터의 통화 텍스트로 상담 콜을 이해하고, 민원을 유발하는 통화를 예측해 봅니다.\n",
      "author": [
        {
          "name": "유충현",
          "url": "https://choonghyunryu.github.io/"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n\nContents\nSTT 텍스트 분석\n민원 상담콜 분석\n\nSTT 텍스트 분석\n음성 인식(Speech Recognition)이란 사람이 말하는 음성 언어를 컴퓨터가 해석해 그 내용을 문자 데이터로 전환하는 처리를 말합니다. STT(Speech-to-Text)라고도 합니다.\n상담센터의 상담 내용을 텍스트화한 STT 데이터를 자연어 처리(NLP, Natural Language Processing)하여 함축되어 있는 고객의 의도를 이해합니다.\n\n\n\n\n민원 상담콜 분석\n상담콜 중에서 민원으로 전이되는 사례가 있습니다. 이 건들의 텍스트 데이터를 이해하고 민원을 예측하는 이진분류 모형을 만들어봅니다.\n\n\n\n\n\n\n\n",
      "last_modified": "2022-09-25T04:22:12+00:00"
    },
    {
      "path": "set_environments.html",
      "title": "Install bitTA in RStudio Cloud",
      "author": [],
      "date": "2022-09-04",
      "contents": "\n\n\n\n\n\n\n\n\nDongsu 웹 사이트\n\n\nHome\n샘플 웹 사이트 개발하기\n\n\n텍스트 기반 이진분류 모형\n \n▾\n\n\nLASSO 모형기반 민원 예측\nBERT 기반 민원 예측\n\n\n☰\n\n\n  \n    \n      \n        \n        \n        \n      \n      \n    \n    \n      \n  Home\n\n\n  샘플 웹 사이트 개발하기\n\n\n  \n    텍스트 기반 이진분류 모형\n     \n    \n  \n  \n      LASSO 모형기반 민원 예측\n    \n    \n      BERT 기반 민원 예측\n    \n  \n      \n  \n\n\n\n\n\n\nInstall bitTA in RStudio Cloud\n2022-09-04\n\n\n\n\n\nRStudio Cloud 환경에서의 bitTA 설치하기\nRStudio Cloud 환경은 RStudio사1가 제공하는, Cloud\n환경에서 RStudio를 사용할 수 있게 제공하는 서비스입니다. 작은 리소스로\n제공하는 이 서비스는, 인터넷만 있으면 어디서든 R Studio 환경으로 코드를\n실행해볼 수있기 때문에 R 교육 환경으로 활용하기에 안성맞춤입니다.\nRStudio Cloud는 여러 제약 사항이 있기 때문에 bitTA를 설치하기 쉽지\n않습니다. RStudio Cloud 환경에 맞는 별도의 작업이 필요합니다. 여기서는\n별도의 작업을 통해서 RStudio Cloud에 bitTA를 설치하는 방법을\n다룹니다.\n\n\nInstall mecab-ko in Rstudio Cloud\nRStudio Cloud에서 사용자는 시스템 디렉토리인 /usr/local 디렉터리에\n접근할 수 없습니다. 그래서 mecab-ko를 사용자가 접근 가능한 /cloud/lib\n경로에 설치하려 합니다.\n다음의 스크립트는 표준 R 서버를 위한 Docker 이미지인\ndocker_rserver의 mecab-ko 설치 스크립트를 RStudio\nCloud 환경에 맞게 수정한 스크립트입니다.\n#!/bin/bash\nset -e\n\n# 설치 리소스를 저장할 디렉토리 \nINSTALLD='/cloud/project/install_resources' \n\n#---------------------------------------------\n# 은전한닙 형태소분석기 설치\n#---------------------------------------------\nmkdir -p ${INSTALLD}\ncd ${INSTALLD}\nwget https://bitbucket.org/eunjeon/mecab-ko/downloads/mecab-0.996-ko-0.9.2.tar.gz \ntar xzvf mecab-0.996-ko-0.9.2.tar.gz \ncd ${INSTALLD}/mecab-0.996-ko-0.9.2 \n./configure --prefix=/cloud/lib\nmake \nmake install \nldconfig \n\n# 설치파일 삭제\nrm -rf $INSTALLD/mecab-0.996-ko-0.9.2 \nrm -rf $INSTALLD/mecab-0.996-ko-0.9.2.tar.gz\n\nPATH=/cloud/lib/bin:$PATH\n\n#---------------------------------------------\n# 은전한닙 형태소분석기 사전 설치\n#---------------------------------------------\ncd ${INSTALLD}\nwget https://bitbucket.org/eunjeon/mecab-ko-dic/downloads/mecab-ko-dic-2.1.1-20180720.tar.gz \ntar xvfz mecab-ko-dic-2.1.1-20180720.tar.gz \ncd ${INSTALLD}/mecab-ko-dic-2.1.1-20180720 \nautoreconf \n./configure --prefix=/cloud/lib\nmake\nmake install\n\n# 설치파일 삭제    \nrm -rf $INSTALLD/mecab-ko-dic-2.1.1-20180720.tar.gz\n\nTest mecab-ko\nShell 환경에서 mecab-ko의 설치 여부를 테스트하기 위해서 다음 명령어를\n수행합니다.\necho \"아버지가 방에 들어가신다.\" | mecab\n## 아버지  NNG,*,F,아버지,*,*,*,*\n## 가    JKS,*,F,가,*,*,*,*\n## 방    NNG,장소,T,방,*,*,*,*\n## 에    JKB,*,F,에,*,*,*,*\n## 들어가  VV,*,F,들어가,*,*,*,*\n## 신다   EP+EF,*,F,신다,Inflect,EP,EF,시/EP/*+ᆫ다/EF/*\n## .    SF,*,*,*,*,*,*,*\n## EOS\n\n\n\nInstall RcppMeCab\nbitTA 패키지의 형태소 토크나이징은 RcppMeCab 패키지를 이용합니다.\n그래서 RcppMeCab 패키지를 설치합니다.\nRcppMeCab 패키지는 mecab-ko의 동적 라이브러리인 libmecab.so.2를\n사용합니다. 그래서 패키지를 설치하기 전에 이 동적 라이브러리를 접근할 수\n있도록 설정해야 합니다.\nRStduo Server는 /etc/rstudio/rserver.conf 파일에 다음처럼\n동적라이브러리의 경로를 설정합니다.\nrsession-ld-library-path=/cloud/lib/lib\n그러나 RStudio Cloud에서는 해당 파일을 수정할 수 있는 권한이 없기\n때문에, dyn.load()로 동적 라이브러리를 로드해야 합니다.\n# for binary\nSys.setenv(PATH=paste(\"/cloud/lib/bin\", Sys.getenv(\"PATH\"), sep = \":\"))\n\n# for ld library\ndyn.load(\"/cloud/lib/lib/libmecab.so.2\")\n\ninstall.packages('RcppMeCab')\n\n\nInstall bitTA\n현재 bitTA는 CRAN에 등록되어 있지 않습니다. 그래서 다음과 같이\nGithub의 개발버전을 설치합니다.\nremotes::install_github('bit2r/bitTA')\n\nTest bitTA\nbitTA의 설치를 확인하기 위해서다음과 같이 명사의 토큰을 추출해\n봅니다. 라이브러리를 로드한 후에 동적 라이브러리인\nlibmecab.so.2를 로드해야됩니다.\nlibrary(\"bitTA\")\ndyn.load(\"/cloud/lib/lib/libmecab.so.2\")\n\nmorpho_mecab(\"아버지가 방에 들어가신다.\")\n##      NNG      NNG \n## \"아버지\"     \"방\"\n\n\n\nSet environments\n앞에서 bitTA를 설치했지만, 세션이 종료되고 다시 RStudio 환경에서\nbitTA를 RStudio Cloud에서 사용하기 위해서는 몇 가지 설정이\n필요합니다.\n\nSet PATH\n.Renviron 파일을 통해서 PATH에 다음과 같이 mecab이 포함된 경로를\n추가합니다. 아쉽게도 LD_LIBRARY_PATH 환경변수는 RStudio Cloud 환경에서\n적용되지 않았습니다. 그래서 .Rprofile 파일을 이용해서 설정해야\n합니다.\nPATH=/cloud/lib/bin:${PATH}\nLD_LIBRARY_PATH=/cloud/lib/lib:${LD_LIBRARY_PATH}\n\n\nSet LD_PATH_PATH\n.Rprofile 파일에 다음과 같이 libmecab.so.2를 로드하는 스크립트를\n기술합니다.\ndyn.load(\"/cloud/lib/lib/libmecab.so.2\")\n\n\n\n2022-10월에 RStudio는 Posit으로 회사이름을 바꿉니다.↩︎\n\n\n\n\n© Copyright 2022 bitR.\n\nCreate by 한국 R 사용자회\n\n\n\n\n\n\n\n\n\n\n",
      "last_modified": "2022-09-25T04:22:16+00:00"
    }
  ],
  "collections": []
}
